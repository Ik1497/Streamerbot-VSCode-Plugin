{
  "void TwitchSubscriberOnly()": {
    "prefix": ["CPHTwitchSubscriberOnly"],
    "body": [
      "CPH.TwitchSubscriberOnly(${1:bool enabled = true});"
    ]
  },
  "void TwitchEmoteOnly()": {
    "prefix": ["CPHTwitchEmoteOnly"],
    "body": [
      "CPH.TwitchEmoteOnly(${1:bool enabled = true});"
    ]
  },
  "void TwitchSlowMode()": {
    "prefix": ["CPHTwitchSlowMode"],
    "body": [
      "CPH.TwitchSlowMode(${1:bool enabled = true}, ${2:int duration = 0});"
    ]
  },
  "void TwitchFollowMode()": {
    "prefix": ["CPHTwitchFollowMode"],
    "body": [
      "CPH.TwitchFollowMode(${1:bool enabled = true}, ${2:int duration = 0});"
    ]
  },
  "bool TwitchIsUserSubscribed()": {
    "prefix": ["CPHTwitchFollowMode"],
    "body": [
      "CPH.TwitchFollowMode(${1:string userId}, ${2:out string tier});"
    ]
  },
  "List<Cheermote> GetCheermotes()": {
    "prefix": ["CPHGetCheermotes"],
    "body": [
      "CPH.GetCheermotes();"
    ]
  },
  "bool SendWhisper()": {
    "prefix": ["CPHSendWhisper"],
    "body": [
      "CPH.SendWhisper(${1:string userName}, ${2:string message}, ${3:bool bot = true});"
    ]
  },
  "bool TwitchAddModerator()": {
    "prefix": ["CPHTwitchAddModerator"],
    "body": [
      "CPH.TwitchAddModerator(${1:string userName});"
    ]
  },
  "bool TwitchRemoveModerator()": {
    "prefix": ["CPHTwitchRemoveModerator"],
    "body": [
      "CPH.TwitchRemoveModerator(${1:string userName});"
    ]
  },
  "bool TwitchAddVip()": {
    "prefix": ["CPHTwitchAddVip"],
    "body": [
      "CPH.TwitchAddVip(${1:string userName});"
    ]
  },
  "bool TwitchRemoveVip()": {
    "prefix": ["CPHTwitchRemoveVip"],
    "body": [
      "CPH.TwitchRemoveVip(${1:string userName});"
    ]
  },
  "void SendMessage()": {
    "prefix": ["CPHSendMessage"],
    "body": [
      "CPH.SendMessage(${1:string message}, ${2:bool bot = true});"
    ]
  },
  "void SendAction()": {
    "prefix": ["CPHSendAction"],
    "body": [
      "CPH.SendAction(${1:string action}, ${2:bool bot = true});"
    ]
  },
  "bool TwitchClearChatMessages()": {
    "prefix": ["CPHTwitchClearChatMessages"],
    "body": [
      "CPH.TwitchClearChatMessages(${1:bool bot = true});"
    ]
  },
  "bool TwitchDeleteChatMessage()": {
    "prefix": ["CPHTwitchDeleteChatMessage"],
    "body": [
      "CPH.TwitchDeleteChatMessage(${1:string messageId}, ${2:bool bot = true});"
    ]
  },
  "bool TwitchClearChannelTags()": {
    "prefix": ["CPHTwitchClearChannelTags"],
    "body": [
      "CPH.TwitchClearChannelTags();"
    ]
  },
  "bool TwitchSetChannelTags()": {
    "prefix": ["CPHTwitchSetChannelTags"],
    "body": [
      "CPH.TwitchSetChannelTags(${1:List<string> tags});"
    ]
  },
  "bool TwitchAddChannelTag()": {
    "prefix": ["CPHTwitchAddChannelTag"],
    "body": [
      "CPH.TwitchAddChannelTag(${1:string tag});"
    ]
  },
  "bool TwitchRemoveChannelTag()": {
    "prefix": ["CPHTwitchRemoveChannelTag"],
    "body": [
      "CPH.TwitchRemoveChannelTag(${1:string tag});"
    ]
  },
  "bool TwitchSendShoutoutById()": {
    "prefix": ["CPHTwitchSendShoutoutById"],
    "body": [
      "CPH.TwitchSendShoutoutById(${1:string userId});"
    ]
  },
  "bool TwitchSendShoutoutByLogin()": {
    "prefix": ["CPHTwitchSendShoutoutByLogin"],
    "body": [
      "CPH.TwitchSendShoutoutByLogin(${1:string userLogin});"
    ]
  },
  "bool TwitchBanUser()": {
    "prefix": ["CPHTwitchBanUser"],
    "body": [
      "CPH.TwitchBanUser(${1:string userName}, ${2:string reason = null}, ${3:bool bot = false});"
    ]
  },
  "bool TwitchUnbanUser()": {
    "prefix": ["CPHTwitchUnbanUser"],
    "body": [
      "CPH.TwitchUnbanUser(${1:string userName}, ${2:bool bot = false});"
    ]
  },
  "bool TwitchTimeoutUser()": {
    "prefix": ["CPHTwitchTimeoutUser"],
    "body": [
      "CPH.TwitchTimeoutUser(${1:string userName}, ${2:int duration}, ${3:string reason = null}, ${4:bool bot = false});"
    ]
  },
  "List<TwitchReward> TwitchGetRewards()": {
    "prefix": ["CPHTwitchGetRewards"],
    "body": [
      "CPH.TwitchGetRewards();"
    ]
  },
  "long TwitchGetChannelPointsUsedByUserId()": {
    "prefix": ["CPHTwitchGetChannelPointsUsedByUserId"],
    "body": [
      "CPH.TwitchGetChannelPointsUsedByUserId(${1:string userId});"
    ]
  },
  "void DisableReward()": {
    "prefix": ["CPHDisableReward"],
    "body": [
      "CPH.DisableReward(${1:string rewardId});"
    ]
  },
  "void EnableReward()": {
    "prefix": ["CPHEnableReward"],
    "body": [
      "CPH.EnableReward(${1:string rewardId});"
    ]
  },
  "void PauseReward()": {
    "prefix": ["CPHPauseReward"],
    "body": [
      "CPH.PauseReward(${1:string rewardId});"
    ]
  },
  "void UnPauseReward()": {
    "prefix": ["CPHUnPauseReward"],
    "body": [
      "CPH.UnPauseReward(${1:string rewardId});"
    ]
  },
  "void TwitchRewardGroupEnable()": {
    "prefix": ["CPHTwitchRewardGroupEnable"],
    "body": [
      "CPH.TwitchRewardGroupEnable(${1:string groupName});"
    ]
  },
  "void TwitchRewardGroupDisable()": {
    "prefix": ["CPHTwitchRewardGroupDisable"],
    "body": [
      "CPH.TwitchRewardGroupDisable(${1:string groupName});"
    ]
  },
  "void TwitchRewardGroupToggleEnable()": {
    "prefix": ["CPHTwitchRewardGroupToggleEnable"],
    "body": [
      "CPH.TwitchRewardGroupToggleEnable(${1:string groupName});"
    ]
  },
  "void TwitchRewardGroupPause()": {
    "prefix": ["CPHTwitchRewardGroupPause"],
    "body": [
      "CPH.TwitchRewardGroupPause(${1:string groupName});"
    ]
  },
  "void TwitchRewardGroupUnPause()": {
    "prefix": ["CPHTwitchRewardGroupUnPause"],
    "body": [
      "CPH.TwitchRewardGroupUnPause(${1:string groupName});"
    ]
  },
  "void TwitchRewardGroupTogglePause()": {
    "prefix": ["CPHTwitchRewardGroupTogglePause"],
    "body": [
      "CPH.TwitchRewardGroupTogglePause(${1:string groupName});"
    ]
  },
  "bool UpdateRewardTitle()": {
    "prefix": ["CPHUpdateRewardTitle"],
    "body": [
      "CPH.UpdateRewardTitle(${1:string rewardId}, ${2:string title});"
    ]
  },
  "bool UpdateRewardPrompt()": {
    "prefix": ["CPHUpdateRewardPrompt"],
    "body": [
      "CPH.UpdateRewardPrompt(${1:string rewardId}, ${2:string prompt});"
    ]
  },
  "bool UpdateReward()": {
    "prefix": ["CPHUpdateReward"],
    "body": [
      "CPH.UpdateReward(${1:string rewardId}, ${2:string title = null}, ${3:string prompt = null}, ${4:int? cost = null});"
    ]
  },
  "void UpdateRewardCost()": {
    "prefix": ["CPHUpdateRewardCost"],
    "body": [
      "CPH.UpdateRewardCost(${1:string rewardId}, ${2:int cost}, ${3:bool additive = false});"
    ]
  },
  "void UpdateRewardCooldown()": {
    "prefix": ["CPHUpdateRewardCooldown"],
    "body": [
      "CPH.UpdateRewardCooldown(${1:string rewardId}, ${2:int cooldown}, ${3:bool additive = false});"
    ]
  },
  "bool TwitchRedemptionFulfill()": {
    "prefix": ["CPHTwitchRedemptionFulfill"],
    "body": [
      "CPH.TwitchRedemptionFulfill(${1:string rewardId}, ${2:string redemptionId});"
    ]
  },
  "bool TwitchRedemptionCancel()": {
    "prefix": ["CPHTwitchRedemptionCancel"],
    "body": [
      "CPH.TwitchRedemptionCancel(${1:string rewardId}, ${2:string redemptionId});"
    ]
  },
  "void TwitchResetRewardCounter()": {
    "prefix": ["CPHTwitchResetRewardCounter"],
    "body": [
      "CPH.TwitchResetRewardCounter(${1:string rewardId});"
    ]
  },
  "void TwitchResetRewardUserCounters()": {
    "prefix": ["CPHTwitchResetRewardUserCounters"],
    "body": [
      "CPH.TwitchResetRewardUserCounters(${1:string rewardId});"
    ]
  },
  "void TwitchResetUserRewardCounters()": {
    "prefix": ["CPHTwitchResetUserRewardCounters"],
    "body": [
      "CPH.TwitchResetUserRewardCounters(${1:string userId}, ${2:bool persisted});"
    ]
  },
  "void TwitchResetUserRewardCounter()": {
    "prefix": ["CPHTwitchResetUserRewardCounter"],
    "body": [
      "CPH.TwitchResetUserRewardCounter(${1:string rewardId}, ${2:string userId});"
    ]
  },
  "bool TwitchPollCreate()": {
    "prefix": ["CPHTwitchPollCreate"],
    "body": [
      "CPH.TwitchPollCreate(${1:string title}, ${2:List<string> choices}, ${3:int duration}, ${4:int channelPointsPerVote = 0});"
    ]
  },
  "void TwitchPollTerminate()": {
    "prefix": ["CPHTwitchPollTerminate"],
    "body": [
      "CPH.TwitchPollTerminate(${1:string pollId});"
    ]
  },
  "void TwitchPollArchive()": {
    "prefix": ["CPHTwitchPollArchive"],
    "body": [
      "CPH.TwitchPollArchive(${1:string pollId});"
    ]
  },
  "string TwitchPredictionCreate()": {
    "prefix": ["CPHTwitchPredictionCreate"],
    "body": [
      "CPH.TwitchPredictionCreate(${1:string title}, ${2:List<string> options}, ${3:int duration});"
    ]
  },
  "void TwitchPredictionCancel()": {
    "prefix": ["CPHTwitchPredictionCancel"],
    "body": [
      "CPH.TwitchPredictionCancel(${1:string predictionId});"
    ]
  },
  "void TwitchPredictionLock()": {
    "prefix": ["CPHTwitchPredictionLock"],
    "body": [
      "CPH.TwitchPredictionLock(${1:string predictionId});"
    ]
  },
  "void TwitchPredictionResolve()": {
    "prefix": ["CPHTwitchPredictionResolve"],
    "body": [
      "CPH.TwitchPredictionResolve(${1:string predictionId}, ${2:string winningId});"
    ]
  },
  "long TwitchGetBitsDonatedByUserId()": {
    "prefix": ["CPHTwitchGetBitsDonatedByUserId"],
    "body": [
      "CPH.TwitchGetBitsDonatedByUserId(${1:string userId});"
    ]
  },
  "List<ClipData> GetAllClips()": {
    "prefix": ["CPHGetAllClips"],
    "body": [
      "CPH.GetAllClips();"
    ]
  },
  "List<ClipData> GetClipsForGame()": {
    "prefix": ["CPHGetClipsForGame"],
    "body": [
      "CPH.GetClipsForGame(${1:int gameId});"
    ]
  },
  "List<ClipData> GetClipsForUser() (userId)": {
    "prefix": ["CPHGetClipsForUser"],
    "body": [
      "CPH.GetClipsForUser(${1:int userId});"
    ]
  },
  "List<ClipData> GetClipsForUser() (username)": {
    "prefix": ["CPHGetClipsForUser"],
    "body": [
      "CPH.GetClipsForUser(${1:string username});"
    ]
  },
  "ClipData CreateClip()": {
    "prefix": ["CPHGetClipsForUser"],
    "body": [
      "CPH.CreateClip();"
    ]
  },

// List<ClipData> GetClipsForUser(int userId, int count);
// List<ClipData> GetClipsForUser(int userId, DateTime start, DateTime end);
// List<ClipData> GetClipsForUser(int userId, DateTime start, DateTime end, int count);
// List<ClipData> GetClipsForUser(int userId, TimeSpan duration);
// List<ClipData> GetClipsForUser(int userId, TimeSpan duration, int count);
// List<ClipData> GetClipsForUser(string userName, int count);
// List<ClipData> GetClipsForUser(string username, DateTime start, DateTime end);
// List<ClipData> GetClipsForUser(string username, DateTime start, DateTime end, int count);
// List<ClipData> GetClipsForUser(string username, TimeSpan duration);
// List<ClipData> GetClipsForUser(string username, TimeSpan duration, int count);
// List<ClipData> GetClipsForGame(int gameId, int count);
// List<ClipData> GetClipsForGame(int gameId, DateTime start, DateTime end);
// List<ClipData> GetClipsForGame(int gameId, DateTime start, DateTime end, int count);
// List<ClipData> GetClipsForGame(int gameId, TimeSpan duration);
// List<ClipData> GetClipsForGame(int gameId, TimeSpan duration, int count);

  "StreamMarker CreateStreamMarker()": {
    "prefix": ["CPHCreateStreamMarker"],
    "body": [
      "CPH.CreateStreamMarker(${1:string description});"
    ]
  },
  "void TwitchRunCommercial()": {
    "prefix": ["CPHTwitchRunCommercial"],
    "body": [
      "CPH.TwitchRunCommercial(${1:int duration});"
    ]
  },
  "bool SetChannelTitle()": {
    "prefix": ["CPHSetChannelTitle"],
    "body": [
      "CPH.SetChannelTitle(${1:string title});"
    ]
  },
  "GameInfo SetChannelGame()": {
    "prefix": ["CPHSetChannelGame"],
    "body": [
      "CPH.SetChannelGame(${1:string game});"
    ]
  },
  "bool SetChannelGameById()": {
    "prefix": ["CPHSetChannelGameById"],
    "body": [
      "CPH.SetChannelGameById(${1:string gameId});"
    ]
  },
  "bool TwitchStartRaidById()": {
    "prefix": ["CPHTwitchStartRaidById"],
    "body": [
      "CPH.TwitchStartRaidById(${1:string userId});"
    ]
  },
  "bool TwitchStartRaidByName()": {
    "prefix": ["CPHTwitchStartRaidByName"],
    "body": [
      "CPH.TwitchStartRaidByName(${1:string userName});"
    ]
  },
  "bool TwitchCancelRaid()": {
    "prefix": ["CPHTwitchCancelRaid"],
    "body": [
      "CPH.TwitchCancelRaid();"
    ]
  },
  "void TwitchAnnounce()": {
    "prefix": ["CPHTwitchAnnounce"],
    "body": [
      "CPH.TwitchAnnounce(${1:string message}, ${2:bool bot = false}, ${3:string color = null});"
    ]
  },
  "List<TeamInfo> GetTeamInfoById()": {
    "prefix": ["CPHGetTeamInfoById"],
    "body": [
      "CPH.GetTeamInfoById(${1:string userId});"
    ]
  },
  "List<TeamInfo> GetTeamInfoByLogin()": {
    "prefix": ["CPHGetTeamInfoById"],
    "body": [
      "CPH.GetTeamInfoById(${1:string userLogin});"
    ]
  },
  "string TwitchOAuthToken": {
    "prefix": ["CPHTwitchOAuthToken"],
    "body": [
      "CPH.TwitchOAuthToken;"
    ]
  },
  "string TwitchClientId": {
    "prefix": ["CPHTwitchClientId"],
    "body": [
      "CPH.TwitchClientId;"
    ]
  }
}